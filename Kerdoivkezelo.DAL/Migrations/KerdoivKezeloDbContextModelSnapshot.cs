// <auto-generated />
using System;
using Kerdoivkezelo.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kerdoivkezelo.DAL.Migrations
{
    [DbContext(typeof(KerdoivKezeloDbContext))]
    partial class KerdoivKezeloDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.Felhasznalo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Felhasznalo");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.JeloltValasz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KerdoivKitolteseFelhasznaloId");

                    b.Property<int?>("KerdoivKitolteseKerdoivId");

                    b.Property<int>("KerdoivKitoltesekId");

                    b.HasKey("Id");

                    b.HasIndex("KerdoivKitolteseFelhasznaloId", "KerdoivKitolteseKerdoivId");

                    b.ToTable("JeloltValaszok");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.Kerdes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Kerdesek");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.KerdesElem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Szoveg");

                    b.HasKey("Id");

                    b.ToTable("KerdesElemek");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.KerdesOsszerendeles", b =>
                {
                    b.Property<int>("KerdesId");

                    b.Property<int>("KerdesElemId");

                    b.HasKey("KerdesId", "KerdesElemId");

                    b.HasIndex("KerdesElemId");

                    b.ToTable("KerdesOsszerendelesek");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.Kerdoiv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AtlagPontszam");

                    b.Property<int?>("ElertPontszamSzumma");

                    b.Property<int?>("IdoKorlat");

                    b.Property<int?>("KitoltesSzam");

                    b.Property<int?>("MaxPontszam");

                    b.Property<string>("Nev");

                    b.HasKey("Id");

                    b.ToTable("Kerdoivek");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.KerdoivKerdes", b =>
                {
                    b.Property<int>("KerdesId");

                    b.Property<int>("KerdoivId");

                    b.HasKey("KerdesId", "KerdoivId");

                    b.HasIndex("KerdoivId");

                    b.ToTable("KerdoivKerdesek");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.KerdoivKitoltes", b =>
                {
                    b.Property<int>("FelhasznaloId");

                    b.Property<int>("KerdoivId");

                    b.Property<int?>("AktualisKerdes");

                    b.Property<int>("Id");

                    b.Property<DateTimeOffset?>("KitoltesKezdete");

                    b.Property<DateTimeOffset?>("KitoltesVege");

                    b.Property<int?>("Pontszam");

                    b.HasKey("FelhasznaloId", "KerdoivId");

                    b.HasIndex("KerdoivId");

                    b.ToTable("KerdoivKitoltesek");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.ValaszElem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tartalom");

                    b.HasKey("Id");

                    b.ToTable("ValaszElemek");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.ValaszOsszerendeles", b =>
                {
                    b.Property<int>("ValaszElemId");

                    b.Property<int>("KerdesId");

                    b.Property<bool>("Helyes");

                    b.Property<int>("JeloltValaszId");

                    b.HasKey("ValaszElemId", "KerdesId");

                    b.HasIndex("JeloltValaszId");

                    b.HasIndex("KerdesId");

                    b.ToTable("ValaszOsszerendelesek");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.JeloltValasz", b =>
                {
                    b.HasOne("Kerdoivkezelo.DAL.Entities.KerdoivKitoltes", "KerdoivKitoltese")
                        .WithMany("JeloltValaszok")
                        .HasForeignKey("KerdoivKitolteseFelhasznaloId", "KerdoivKitolteseKerdoivId");
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.KerdesOsszerendeles", b =>
                {
                    b.HasOne("Kerdoivkezelo.DAL.Entities.KerdesElem", "KerdesElem")
                        .WithMany("KerdesOsszerendelesek")
                        .HasForeignKey("KerdesElemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kerdoivkezelo.DAL.Entities.Kerdes", "Kerdes")
                        .WithMany("KerdesOsszerendelesek")
                        .HasForeignKey("KerdesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.KerdoivKerdes", b =>
                {
                    b.HasOne("Kerdoivkezelo.DAL.Entities.Kerdes", "Kerdes")
                        .WithMany("KerdoivKerdesek")
                        .HasForeignKey("KerdesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kerdoivkezelo.DAL.Entities.Kerdoiv", "Kerdoiv")
                        .WithMany("KerdoivKerdesek")
                        .HasForeignKey("KerdoivId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.KerdoivKitoltes", b =>
                {
                    b.HasOne("Kerdoivkezelo.DAL.Entities.Felhasznalo", "Felhasznalo")
                        .WithMany("KerdoivKitoltesek")
                        .HasForeignKey("FelhasznaloId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kerdoivkezelo.DAL.Entities.Kerdoiv", "Kerdoiv")
                        .WithMany()
                        .HasForeignKey("KerdoivId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kerdoivkezelo.DAL.Entities.ValaszOsszerendeles", b =>
                {
                    b.HasOne("Kerdoivkezelo.DAL.Entities.JeloltValasz", "JeloltValasz")
                        .WithMany("ValaszOsszerendelesek")
                        .HasForeignKey("JeloltValaszId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kerdoivkezelo.DAL.Entities.Kerdes", "Kerdes")
                        .WithMany("Valaszlehetosegek")
                        .HasForeignKey("KerdesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kerdoivkezelo.DAL.Entities.ValaszElem", "ValaszElem")
                        .WithMany("ValaszOsszerendelesek")
                        .HasForeignKey("ValaszElemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
